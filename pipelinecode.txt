# set up working space, must initiate code while in user's homespace
	# all files and subsequent code will be ran while in ~/B195515 directory
cd
rm -fr B195515
mkdir B195515
cd B195515

#!/bin/bash
# Define some variables
AY21=~/B195515/AY21
FASTAQC=~/B195515/FastaQC
FASTQ=~/B195515/AY21/fastq
GENOME=~/B195515/AY21/Tcongo_genome/TriTrypDB-46_TcongolenseIL3000_2019_Genome.fasta
GENOME_ANNOTATED=~/B195515/AY21/TriTrypDB-46_TcongolenseIL3000_2019.bed

# Copy original files to B195515 folder
echo
echo "Copying sequence files, reference sequence, and annotated sequence to current folder..."
cp -r /localdisk/data/BPSM/AY21/ .

echo
echo "Performing quality check of sequences..."
echo
echo "Summarising quality check output for each sequence..."
echo

# Make directory for QC files, output fastqc files to FastaQC
mkdir FastaQC
fastqc -q -f fastq -o FastaQC -t 15 $FASTQ/*.fq.gz
gunzip -q $GENOME.gz
unzip -q -o -d $FASTAQC $FASTAQC/\*.zip 
rm -fr $FASTAQC/*.zip


## Extract header line for SummaryQC
grep -i "Filename\|%GC\|>>" $FASTAQC/100k.C1-1-501_1_fastqc/fastqc_data.txt | grep -v ">>END" | cut -f1 | paste -s > $FASTAQC/SumQC.csv
chmod 755 $FASTAQC/SumQC.csv


## Extract and compile QC summary from each fastaqc file
for i in $FASTAQC/*_fastqc/fastqc_data.txt
do
grep -i "Filename\|%GC\|>>" ${i} | grep -v ">>END" | cut -f2 | paste -s >> $FASTAQC/SumQC.csv
done
cut -f2 $FASTAQC/SumQC.csv > $FASTAQC/SumQC1
cut -f1,3,4,5,6,7,8,9,10,11,12 $FASTAQC/SumQC.csv > $FASTAQC/SumQC2
paste $FASTAQC/SumQC1 $FASTAQC/SumQC2 > $FASTAQC/SumQCsorted.csv
cat $FASTAQC/SumQCsorted.csv
rm -fr $FASTAQC/SumQC1
rm -fr $FASTAQC/SumQC2
rm -fr $FASTAQC/SumQC
echo
echo

# Build the binary index files (6 files) all with the specificed prefix
echo "Building binary reference genome sequences..."
bowtie2-build --quiet $GENOME refgenome

echo
echo "Successful!"
echo
echo "Now aligning sequences to reference genome with bowtie2..."
echo
echo "This may take a while...so go grab a snack..."
echo

# Align paired-end reads to binary reference genome, then output sorted bam files bypassing sam intermediate, and create matching BAM index file
for i in $(ls $FASTQ/*.fq.gz | rev | cut -c 9- | rev | uniq)
do
bowtie2 -p 15 -x refgenome -1 ${i}_1.fq.gz -2 ${i}_2.fq.gz | samtools sort -o ${i}.sorted.bam
done


for i in $(ls $FASTQ/*.fq.gz | rev | cut -c 9- | rev | uniq)
do
samtools index -b ${i}.sorted.bam ${i}.sorted.bai
done

echo "Succesful! All bam files are now sorted and indexed" 
echo

# Converting bam to bed, both are sorted
for i in $(ls $FASTQ/*.fq.gz | rev | cut -c 9- | rev | uniq)
do
bedtools bamtobed -i ${i}.sorted.bam > ${i}.sorted.bed
done

echo "Generating bed files and aligning to annotated genome..."

# Align bed files to bed reference, generate sorted count file for each output
for i in $(ls $FASTQ/*.fq.gz | rev | cut -c 9- | rev | uniq)
do
bedtools intersect -a ${i}.sorted.bed -b $GENOME_ANNOTATED -wa -wb | cut -f10 | sort | uniq -c | sed -E 's/^ *//; s/ /\t/' > ${i}.sortedcounts.tsv
done

echo
echo "Now generating average expression levels per gene for each group..."


# Build index file for gene name and description
cut -f4,5 $GENOME_ANNOTATED > genecount.bed

# Join all "sorted counts" file to index file by gene ID
for i in $(ls $FASTQ/*.fq.gz | rev | cut -c 9- | rev | uniq)
do
join -a 1 -t $'\t' -e -o -1 1 -2 2 genecount.bed ${i}.sortedcounts.tsv > output
cat output > genecount.bed
done


# Make a header for counts
echo "GENE NAME" > coltitles
echo "GENE DESCRIPTION" >> coltitles
cat $FASTQ/100k.fqfiles | cut -f1 | grep -v "ID" >> coltitles
paste -s coltitles > countspergene.tsv
cat genecount.bed >> countspergene.tsv

rm -fr output genecount.bed coltitles



echo "All done"

###### THIS IS A TEST AREA #######

